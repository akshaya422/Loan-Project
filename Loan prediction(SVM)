{"cells":[{"cell_type":"markdown","metadata":{"id":"81_95bsq9xaS"},"source":["## **SVM**"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"YiBD6-gpGiZx","executionInfo":{"status":"ok","timestamp":1700485724860,"user_tz":-330,"elapsed":1344,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import seaborn as sns\n","%matplotlib inline\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18347,"status":"ok","timestamp":1698810519994,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"dvitcAVcHRan","outputId":"f90e1d8d-cab8-4ee9-b60d-8ee1d45b93ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"zRENDBK1GoYe","executionInfo":{"status":"ok","timestamp":1700485731343,"user_tz":-330,"elapsed":690,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["df=pd.read_csv(\"/content/drive/MyDrive/Loan/loan_approval_dataset.csv\")"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1700485733805,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"0PLk2yhHGvXS","outputId":"58de85e5-eedb-4edc-a23d-65470bd614cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      loan_id   no_of_dependents      education  self_employed   income_annum  \\\n","0           1                  2       Graduate             No        9600000   \n","1           2                  0   Not Graduate            Yes        4100000   \n","2           3                  3       Graduate             No        9100000   \n","3           4                  3       Graduate             No        8200000   \n","4           5                  5   Not Graduate            Yes        9800000   \n","...       ...                ...            ...            ...            ...   \n","4264     4265                  5       Graduate            Yes        1000000   \n","4265     4266                  0   Not Graduate            Yes        3300000   \n","4266     4267                  2   Not Graduate             No        6500000   \n","4267     4268                  1   Not Graduate             No        4100000   \n","4268     4269                  1       Graduate             No        9200000   \n","\n","       loan_amount   loan_term   cibil_score   residential_assets_value  \\\n","0         29900000          12           778                    2400000   \n","1         12200000           8           417                    2700000   \n","2         29700000          20           506                    7100000   \n","3         30700000           8           467                   18200000   \n","4         24200000          20           382                   12400000   \n","...            ...         ...           ...                        ...   \n","4264       2300000          12           317                    2800000   \n","4265      11300000          20           559                    4200000   \n","4266      23900000          18           457                    1200000   \n","4267      12800000           8           780                    8200000   \n","4268      29700000          10           607                   17800000   \n","\n","       commercial_assets_value   luxury_assets_value   bank_asset_value  \\\n","0                     17600000              22700000            8000000   \n","1                      2200000               8800000            3300000   \n","2                      4500000              33300000           12800000   \n","3                      3300000              23300000            7900000   \n","4                      8200000              29400000            5000000   \n","...                        ...                   ...                ...   \n","4264                    500000               3300000             800000   \n","4265                   2900000              11000000            1900000   \n","4266                  12400000              18100000            7300000   \n","4267                    700000              14100000            5800000   \n","4268                  11800000              35700000           12000000   \n","\n","      loan_status  \n","0        Approved  \n","1        Rejected  \n","2        Rejected  \n","3        Rejected  \n","4        Rejected  \n","...           ...  \n","4264     Rejected  \n","4265     Approved  \n","4266     Rejected  \n","4267     Approved  \n","4268     Approved  \n","\n","[4269 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-ea9b5665-0a7d-4b78-8668-74de4db9ceec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loan_id</th>\n","      <th>no_of_dependents</th>\n","      <th>education</th>\n","      <th>self_employed</th>\n","      <th>income_annum</th>\n","      <th>loan_amount</th>\n","      <th>loan_term</th>\n","      <th>cibil_score</th>\n","      <th>residential_assets_value</th>\n","      <th>commercial_assets_value</th>\n","      <th>luxury_assets_value</th>\n","      <th>bank_asset_value</th>\n","      <th>loan_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>9600000</td>\n","      <td>29900000</td>\n","      <td>12</td>\n","      <td>778</td>\n","      <td>2400000</td>\n","      <td>17600000</td>\n","      <td>22700000</td>\n","      <td>8000000</td>\n","      <td>Approved</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Not Graduate</td>\n","      <td>Yes</td>\n","      <td>4100000</td>\n","      <td>12200000</td>\n","      <td>8</td>\n","      <td>417</td>\n","      <td>2700000</td>\n","      <td>2200000</td>\n","      <td>8800000</td>\n","      <td>3300000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>9100000</td>\n","      <td>29700000</td>\n","      <td>20</td>\n","      <td>506</td>\n","      <td>7100000</td>\n","      <td>4500000</td>\n","      <td>33300000</td>\n","      <td>12800000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>8200000</td>\n","      <td>30700000</td>\n","      <td>8</td>\n","      <td>467</td>\n","      <td>18200000</td>\n","      <td>3300000</td>\n","      <td>23300000</td>\n","      <td>7900000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>Not Graduate</td>\n","      <td>Yes</td>\n","      <td>9800000</td>\n","      <td>24200000</td>\n","      <td>20</td>\n","      <td>382</td>\n","      <td>12400000</td>\n","      <td>8200000</td>\n","      <td>29400000</td>\n","      <td>5000000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4264</th>\n","      <td>4265</td>\n","      <td>5</td>\n","      <td>Graduate</td>\n","      <td>Yes</td>\n","      <td>1000000</td>\n","      <td>2300000</td>\n","      <td>12</td>\n","      <td>317</td>\n","      <td>2800000</td>\n","      <td>500000</td>\n","      <td>3300000</td>\n","      <td>800000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>4265</th>\n","      <td>4266</td>\n","      <td>0</td>\n","      <td>Not Graduate</td>\n","      <td>Yes</td>\n","      <td>3300000</td>\n","      <td>11300000</td>\n","      <td>20</td>\n","      <td>559</td>\n","      <td>4200000</td>\n","      <td>2900000</td>\n","      <td>11000000</td>\n","      <td>1900000</td>\n","      <td>Approved</td>\n","    </tr>\n","    <tr>\n","      <th>4266</th>\n","      <td>4267</td>\n","      <td>2</td>\n","      <td>Not Graduate</td>\n","      <td>No</td>\n","      <td>6500000</td>\n","      <td>23900000</td>\n","      <td>18</td>\n","      <td>457</td>\n","      <td>1200000</td>\n","      <td>12400000</td>\n","      <td>18100000</td>\n","      <td>7300000</td>\n","      <td>Rejected</td>\n","    </tr>\n","    <tr>\n","      <th>4267</th>\n","      <td>4268</td>\n","      <td>1</td>\n","      <td>Not Graduate</td>\n","      <td>No</td>\n","      <td>4100000</td>\n","      <td>12800000</td>\n","      <td>8</td>\n","      <td>780</td>\n","      <td>8200000</td>\n","      <td>700000</td>\n","      <td>14100000</td>\n","      <td>5800000</td>\n","      <td>Approved</td>\n","    </tr>\n","    <tr>\n","      <th>4268</th>\n","      <td>4269</td>\n","      <td>1</td>\n","      <td>Graduate</td>\n","      <td>No</td>\n","      <td>9200000</td>\n","      <td>29700000</td>\n","      <td>10</td>\n","      <td>607</td>\n","      <td>17800000</td>\n","      <td>11800000</td>\n","      <td>35700000</td>\n","      <td>12000000</td>\n","      <td>Approved</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4269 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea9b5665-0a7d-4b78-8668-74de4db9ceec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ea9b5665-0a7d-4b78-8668-74de4db9ceec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ea9b5665-0a7d-4b78-8668-74de4db9ceec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e15025d-ca5f-4f2e-8c99-222becd26e7d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e15025d-ca5f-4f2e-8c99-222becd26e7d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e15025d-ca5f-4f2e-8c99-222becd26e7d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}],"source":["df"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"elapsed":546,"status":"ok","timestamp":1700485736581,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"Ic8tNwztG3g9","outputId":"1eb526ae-4a21-4432-e5df-9a9903fada6d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      loan_id   no_of_dependents   education   self_employed   income_annum  \\\n","0           1                  2           0               0        9600000   \n","1           2                  0           1               1        4100000   \n","2           3                  3           0               0        9100000   \n","3           4                  3           0               0        8200000   \n","4           5                  5           1               1        9800000   \n","...       ...                ...         ...             ...            ...   \n","4264     4265                  5           0               1        1000000   \n","4265     4266                  0           1               1        3300000   \n","4266     4267                  2           1               0        6500000   \n","4267     4268                  1           1               0        4100000   \n","4268     4269                  1           0               0        9200000   \n","\n","       loan_amount   loan_term   cibil_score   residential_assets_value  \\\n","0         29900000          12           778                    2400000   \n","1         12200000           8           417                    2700000   \n","2         29700000          20           506                    7100000   \n","3         30700000           8           467                   18200000   \n","4         24200000          20           382                   12400000   \n","...            ...         ...           ...                        ...   \n","4264       2300000          12           317                    2800000   \n","4265      11300000          20           559                    4200000   \n","4266      23900000          18           457                    1200000   \n","4267      12800000           8           780                    8200000   \n","4268      29700000          10           607                   17800000   \n","\n","       commercial_assets_value   luxury_assets_value   bank_asset_value  \\\n","0                     17600000              22700000            8000000   \n","1                      2200000               8800000            3300000   \n","2                      4500000              33300000           12800000   \n","3                      3300000              23300000            7900000   \n","4                      8200000              29400000            5000000   \n","...                        ...                   ...                ...   \n","4264                    500000               3300000             800000   \n","4265                   2900000              11000000            1900000   \n","4266                  12400000              18100000            7300000   \n","4267                    700000              14100000            5800000   \n","4268                  11800000              35700000           12000000   \n","\n","       loan_status  \n","0                0  \n","1                1  \n","2                1  \n","3                1  \n","4                1  \n","...            ...  \n","4264             1  \n","4265             0  \n","4266             1  \n","4267             0  \n","4268             0  \n","\n","[4269 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-1cf87291-abbc-446e-817c-0b9f1627a6b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loan_id</th>\n","      <th>no_of_dependents</th>\n","      <th>education</th>\n","      <th>self_employed</th>\n","      <th>income_annum</th>\n","      <th>loan_amount</th>\n","      <th>loan_term</th>\n","      <th>cibil_score</th>\n","      <th>residential_assets_value</th>\n","      <th>commercial_assets_value</th>\n","      <th>luxury_assets_value</th>\n","      <th>bank_asset_value</th>\n","      <th>loan_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9600000</td>\n","      <td>29900000</td>\n","      <td>12</td>\n","      <td>778</td>\n","      <td>2400000</td>\n","      <td>17600000</td>\n","      <td>22700000</td>\n","      <td>8000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4100000</td>\n","      <td>12200000</td>\n","      <td>8</td>\n","      <td>417</td>\n","      <td>2700000</td>\n","      <td>2200000</td>\n","      <td>8800000</td>\n","      <td>3300000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9100000</td>\n","      <td>29700000</td>\n","      <td>20</td>\n","      <td>506</td>\n","      <td>7100000</td>\n","      <td>4500000</td>\n","      <td>33300000</td>\n","      <td>12800000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8200000</td>\n","      <td>30700000</td>\n","      <td>8</td>\n","      <td>467</td>\n","      <td>18200000</td>\n","      <td>3300000</td>\n","      <td>23300000</td>\n","      <td>7900000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9800000</td>\n","      <td>24200000</td>\n","      <td>20</td>\n","      <td>382</td>\n","      <td>12400000</td>\n","      <td>8200000</td>\n","      <td>29400000</td>\n","      <td>5000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4264</th>\n","      <td>4265</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1000000</td>\n","      <td>2300000</td>\n","      <td>12</td>\n","      <td>317</td>\n","      <td>2800000</td>\n","      <td>500000</td>\n","      <td>3300000</td>\n","      <td>800000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4265</th>\n","      <td>4266</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3300000</td>\n","      <td>11300000</td>\n","      <td>20</td>\n","      <td>559</td>\n","      <td>4200000</td>\n","      <td>2900000</td>\n","      <td>11000000</td>\n","      <td>1900000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4266</th>\n","      <td>4267</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6500000</td>\n","      <td>23900000</td>\n","      <td>18</td>\n","      <td>457</td>\n","      <td>1200000</td>\n","      <td>12400000</td>\n","      <td>18100000</td>\n","      <td>7300000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4267</th>\n","      <td>4268</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4100000</td>\n","      <td>12800000</td>\n","      <td>8</td>\n","      <td>780</td>\n","      <td>8200000</td>\n","      <td>700000</td>\n","      <td>14100000</td>\n","      <td>5800000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4268</th>\n","      <td>4269</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9200000</td>\n","      <td>29700000</td>\n","      <td>10</td>\n","      <td>607</td>\n","      <td>17800000</td>\n","      <td>11800000</td>\n","      <td>35700000</td>\n","      <td>12000000</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4269 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cf87291-abbc-446e-817c-0b9f1627a6b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1cf87291-abbc-446e-817c-0b9f1627a6b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1cf87291-abbc-446e-817c-0b9f1627a6b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdffbb3b-6091-4e15-a197-4eca5462393f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdffbb3b-6091-4e15-a197-4eca5462393f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdffbb3b-6091-4e15-a197-4eca5462393f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}],"source":["from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","df[ ' education' ]= le.fit_transform(df[ ' education' ])\n","df[ ' self_employed' ]= le.fit_transform(df[ ' self_employed' ])\n","df[ ' loan_status' ]= le.fit_transform(df[ ' loan_status' ])\n","df"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":578,"status":"ok","timestamp":1700485742453,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"tGCXiusgG8lp","outputId":"06e91a01-be2a-49cb-bdde-62132d9cca55"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4269 entries, 0 to 4268\n","Data columns (total 13 columns):\n"," #   Column                     Non-Null Count  Dtype\n","---  ------                     --------------  -----\n"," 0   loan_id                    4269 non-null   int64\n"," 1    no_of_dependents          4269 non-null   int64\n"," 2    education                 4269 non-null   int64\n"," 3    self_employed             4269 non-null   int64\n"," 4    income_annum              4269 non-null   int64\n"," 5    loan_amount               4269 non-null   int64\n"," 6    loan_term                 4269 non-null   int64\n"," 7    cibil_score               4269 non-null   int64\n"," 8    residential_assets_value  4269 non-null   int64\n"," 9    commercial_assets_value   4269 non-null   int64\n"," 10   luxury_assets_value       4269 non-null   int64\n"," 11   bank_asset_value          4269 non-null   int64\n"," 12   loan_status               4269 non-null   int64\n","dtypes: int64(13)\n","memory usage: 433.7 KB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700485744902,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"sablj7Aw-4rB","outputId":"25caf329-d0b4-4bbb-cde7-5b7250e27b1f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['loan_id', ' no_of_dependents', ' education', ' self_employed',\n","       ' income_annum', ' loan_amount', ' loan_term', ' cibil_score',\n","       ' residential_assets_value', ' commercial_assets_value',\n","       ' luxury_assets_value', ' bank_asset_value', ' loan_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":6}],"source":["col_names = df.columns\n","col_names"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"teymj0MK-6pd","executionInfo":{"status":"ok","timestamp":1700485748626,"user_tz":-330,"elapsed":6,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["df.columns = df.columns.str.strip()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1663,"status":"ok","timestamp":1700485755672,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"N6J_widW_DqB","outputId":"0b2faf38-8318-44a7-ef8a-079c3db58fa0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['loan_id', 'no_of_dependents', 'education', 'self_employed',\n","       'income_annum', 'loan_amount', 'loan_term', 'cibil_score',\n","       'residential_assets_value', 'commercial_assets_value',\n","       'luxury_assets_value', 'bank_asset_value', 'loan_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":8}],"source":["df.columns"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":554,"status":"ok","timestamp":1700485764270,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"hmZlx8K__sWW","outputId":"09616c1c-bd0a-4738-80f2-8df51053a301"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2656\n","1    1613\n","Name: loan_status, dtype: int64"]},"metadata":{},"execution_count":9}],"source":["df['loan_status'].value_counts()"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"yorPMXR5yJEr","executionInfo":{"status":"ok","timestamp":1700485766290,"user_tz":-330,"elapsed":5,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["X = df.drop(['loan_status'], axis=1)\n","y = df['loan_status']"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"9jDcbAsNGnkW","executionInfo":{"status":"ok","timestamp":1700485767730,"user_tz":-330,"elapsed":5,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700485769553,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"T9yLPuCfHFz6","outputId":"34798839-08c3-4449-cdaa-87b3f3b93548"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((3415, 12), (854, 12))"]},"metadata":{},"execution_count":12}],"source":["X_train.shape, X_test.shape"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"6q_KlfvxHKT-","executionInfo":{"status":"ok","timestamp":1700485772535,"user_tz":-330,"elapsed":558,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["cols = X_train.columns"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"Oj8xqDQnHPlB","executionInfo":{"status":"ok","timestamp":1700485776212,"user_tz":-330,"elapsed":5,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"8zYgdC7rHUAf","executionInfo":{"status":"ok","timestamp":1700485778605,"user_tz":-330,"elapsed":1,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["X_train = pd.DataFrame(X_train, columns=[cols])"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"CfKTJfrNHd0Y","executionInfo":{"status":"ok","timestamp":1700485781723,"user_tz":-330,"elapsed":593,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"outputs":[],"source":["X_test = pd.DataFrame(X_test, columns=[cols])"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":845,"status":"ok","timestamp":1700485783775,"user":{"displayName":"Project","userId":"04591569167876890835"},"user_tz":-330},"id":"yllnu-4BH0g7","outputId":"511e2fce-a9d0-4999-b96e-eb3c5f36e8f4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model accuracy score with rbf kernel and C=1000.0 : 0.9520\n"]}],"source":["# classifier with RBF(Radial Basis Function) kernel and C=1000\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score,classification_report\n","svc=SVC(C=1000.0)\n","# fit classifier to training set\n","svc.fit(X_train,y_train)\n","# make predictions on test set\n","y_pred=svc.predict(X_test)\n","# printing accuracy score\n","print('Model accuracy score with rbf kernel and C=1000.0 : {0:0.4f}'. format(accuracy_score(y_test, y_pred)))"]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","# Example true labels and predicted labels\n","true_labels = y_test\n","predicted_labels = y_pred\n","# Calculate the confusion matrix\n","conf_matrix = confusion_matrix(true_labels, predicted_labels)\n","# Print the confusion matrix\n","print(\"Confusion Matrix:\")\n","print(conf_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qQKjyKd2bJVX","executionInfo":{"status":"ok","timestamp":1700485785826,"user_tz":-330,"elapsed":9,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"8af128bf-f56c-42a6-ed8d-1878d716f224"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[502  21]\n"," [ 20 311]]\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","# Get the predictions\n","y_pred = svc.predict(X_test)\n","# Calculate the confusion matrix\n","conf_matrix = confusion_matrix(y_true=y_test, y_pred=y_pred)\n","# Print the confusion matrix using Matplotlib\n","fig, ax = plt.subplots(figsize=(3.5, 3.5))\n","ax.matshow(conf_matrix, cmap=plt.cm.Blues, alpha=0.3)\n","for i in range(conf_matrix.shape[0]):\n","    for j in range(conf_matrix.shape[1]):\n","        ax.text(x=j, y=i,s=conf_matrix[i, j], va='center', ha='center', size='xx-large')\n","plt.xlabel('Predictions', fontsize=18)\n","plt.ylabel('Actuals', fontsize=18)\n","plt.title('Confusion Matrix', fontsize=18)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"4KmcjN6aKYGf","executionInfo":{"status":"ok","timestamp":1700485788690,"user_tz":-330,"elapsed":1303,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"3c37e142-5be5-4528-c3c5-931329a396d0"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 350x350 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAVEAAAF2CAYAAADX36vMAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA6EklEQVR4nO3deVxU5f4H8M8ZYBjWYQvcWNwBLVwzNXPDNdPUylxyLcv0atey3TTzd63slpreNHcryyXtimLmgpnrdccFTA0Q2VwQhh2ZeX5/ECcnGJY5wAzweb9evIRznuc83zkOH84+khBCgIiIzKKydAFERDUZQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlKAIUpEpABDlMrtwoULeO6551C/fn3Y2tpCkiS0adPGYvUcPHgQkiRBkiSL1UAli42Nlf9vYmNjLV1OlWKIVjO9Xo/Nmzdj7NixaNGiBdzc3KBWq+Ht7Y3HH38c77zzDi5evGjpMouJiYlB165dsWXLFiQnJ0Or1cLHxwdeXl6WLq1GKgoYSZIQFBRUZvuTJ08a9Rk/fnyl1nPu3DnMnTsXixYtqtTl1gmCqs2xY8dEixYtBAD5y87OTnh4eAiVSmU0fdiwYSIvL8/SJcveeustAUA0a9ZM3Lx509LlCCGEOHHihGjZsqVo2bKlpUupsAf/rwGIo0ePltr+lVdeMWo/bty4Sq1n7dq1AoDw9/evlOXdvHlT/r+xlvdLVeGWaDUJCwtDjx498Pvvv8PT0xMLFizA77//jvz8fNy9exf5+fk4efIk3n77bbi6umLbtm3Izs62dNmyCxcuAACGDBmChg0bWriaQo8++iiio6MRHR1t6VLMFhAQAABYu3atyTa5ubn44YcfIEkS/P39q6kyZRo2bCj/31jL+6WqMESrwdWrVzFmzBjk5eUhODgY586dw9tvv43mzZvLbWxsbNChQwcsWLAAMTExGDJkiAUrLq4o0J2dnS1cSe0yduxYSJKETZs2mfyjuW3bNqSlpaF79+5y6JIVsfSmcF3w3HPPCQBCo9GIK1eulLufwWAoNi0pKUm88cYbIjg4WDg6OgpHR0cRHBwsZs2aJZKTk0tcTkxMjLwbGBMTI5KTk8X06dNFQECAsLe3F97e3mLEiBEiKiqqWF9/f/9iu54PfkVERAghhJgzZ44AILp3727y9URERMj9SnL8+HExatQouS5HR0fh5+cnnnjiCTFv3jwRHx9foeVZYn2VV9Hy165dK3r06CEAiA0bNpTYtnfv3gKAWL9+vejevbvJ3fmsrCyxceNG8cILL4iQkBDh5eUl1Gq1qF+/vhgyZIgIDw8vtRZTX3PmzJHbjhs3Th7fYDCIlStXiq5duwoPDw/59ZS0DovcuXNHNGzYUAAQQ4YMKbGe+/fviy5duggA4uGHHxY5OTnlWaUWwxCtYsnJyfLxzkmTJila1sGDB4Wbm5v85nRychJOTk7yz+7u7uK3334r1u/BN/TOnTuFt7e3ACAcHR2Fvb29PM/V1VWcO3fOqG+HDh2Ej4+PsLOzk8f08fGRv44cOSKEUB6i69atE5IkyfPt7e2Fq6ur0S9z0S9oeZZnqfVVXg++pvXr1wsAomfPnsXaxcbGCkmShIuLi8jKyio1RIuOawIQkiQJrVYrHB0djdbh66+/Xqyfj4+PvK5VKpXR/6+Pj49YuHCh3LYoRMeOHSuGDx8u93F3dxcqlarMEBWi8P+l6Hdi6dKlxep57733BADh4OAgLl26VLEVawEM0Sr2/fffG/1CmuvGjRtyIAQHB4vDhw/L8w4dOiRatmwpAAgPD49iB/IffEO7u7uLrl27ipMnTwohCv/q7927V9SvX18AEN26dStx/KJf3ge3Sh6kJESzsrKEi4uLACDGjBkjrl27Js/LzMwUp06dErNmzRK7du0q1/KsYX2V5cEQLXr9kiSJP/74w6jd3LlzBQDx4osvCiFEqSH6008/iTfeeEMcPnxYZGVlydMTExPFhx9+KP8h/O9//1usb3lPLBWFqLOzs7C1tRWfffaZSE9PF0IIkZGRIRITE4UQpYeoEELMnj1b3juLjIyUp0dERMgBu3z58lJrsRYM0Sr2/vvvy2+mhIQEs5dTdHbW3d1dJCUlFZsfHx8vb01MnTrVaN6Db+jAwECRnZ1drP+OHTvkNn/fbRaiakP0xIkT8pbi/fv3TfYv7/KEsPz6Ksvft65ffPFFAUB88MEHchuDwSACAgIEAHmLv7QQLcvChQsFANG7d+9i8yoaogDEkiVLTLYrK0QLCgpE165d5T9y2dnZRrv6w4YNq+jLsxieWKpid+/elb/38PAwaxlCCGzevBkA8Morr6BevXrF2jRq1AivvPIKAOCHH34wuazXX38dDg4OxaYPGDAAarUawF9n4quLm5sbAMhXKihVE9fXxIkTAQDr16+H+PMTeyIiIhAbG4uWLVuiS5cuisd48sknAQDHjh2DXq9XtCx3d3e8/PLLZve3sbHBxo0b4e7ujsuXL2PGjBmYOHEiEhIS4Ovri1WrVimqrzoxRGuAmJgYpKamAgBCQ0NNtuvTpw+AwuCOiYkpsU2nTp1KnG5ra4uHHnoIAOSxqkvTpk0RGBiI+/fvo1OnTvjkk09w7tw5s3/Ra+L66ty5MwIDAxEXF4f9+/cDANasWQMAmDBhQrmXk5KSgjlz5qBz587w9PSU7yyTJAnBwcEACq+0uHfvnqJ6O3bsKP8RMZefnx9WrlwJAFi5ciV27NgBGxsbfPvtt3B3d1e07OrEEK1inp6e8vfm/rLdunVL/r60a+4aNWpUYp8Hubi4mOxva2sLALh//35FS1TExsYGP/zwAxo3boy4uDi8/fbbaNu2LVxdXdGnTx989dVXFbpmtqaur6KwXLt2LXQ6HbZt2wYbGxuMHTu2XP2PHTuGwMBAzJs3D8ePH0dqaiocHBzg7e1d7O6yrKwsRbV6e3sr6l9k+PDhGD58uPzzG2+8gSeeeKJSll1dGKJVrFWrVvL3Z8+etWAl1i0kJATR0dH48ccfMXnyZLRu3Ro5OTnYt28fXn31VQQGBlb7YYbq9sILL8DGxgbbt2/H8uXLkZOTg/79+6N+/fpl9i0oKMDIkSORlpaGNm3aIDw8HDqdDhkZGUhJSUFycjKOHz8uty86ZGAuGxsbRf2LxMbGYt++ffLPR44cUXyooboxRKtYz549oVIVrubt27ebtYwH/+rfvHnTZLsH51XWlkJ5FW2V5ebmmmyTnp5e6jLUajWGDRuGFStW4MKFC7h9+zaWL18ODw8PxMfHY9y4ceWqpSasr5LUr18f/fv3R05ODmbPng2g/Lvyx44dQ1xcHGxsbLBz504MGDCg2FZ0cnJypdesRFHwp6eno0WLFrC3t8fhw4fx0UcfWbq0CmGIVjEfHx95d2Xjxo34/fffy923aGuhcePG8kmpouNlJSn6i+7p6YnGjRubW7JZio5hxcfHm2xz4sSJCi3T09MTL7/8Mj755BMAhVvy5TnxVBPWlylFJ5jy8/Ph5eWFwYMHl6tf0Xp/6KGHTB7CeHCL7++K/tAr3UKtiDlz5uD48eNwdHTETz/9JP8/z58/H4cPH662OpRiiFaD+fPnw9nZGTk5ORg2bBgSEhJKbX/v3j0MHz5c3nKTJAkjRowAAKxYsaLELYrExESsWLECADBy5MhKfgVlCwkJkesoKSxv3boln0T4u7y8vFKX/eDZ8aJf9tLUhPVlylNPPYVZs2bh9ddfx6JFi2BnZ1euflqtFkDhiaWUlJRi82/evIklS5aY7O/q6goASEtLq3jRZoiIiMDHH38MAPjiiy8QFBSEGTNm4Mknn4Rer8fo0aMVn/yqNpa8vqou2b59u1Cr1QKA8PLyEh9//LG4evWqPL+goECcOXNGzJ49W75I/N69e/L8+Ph4eXqrVq3k6waFEOLw4cMiKCioXBePl3TNXpGiWzz/fmeQEGVfJ6rX6+X+LVu2FCdPnhQGg0Ho9XoREREhgoKC5FsD//62W7dunejSpYtYvny5uH79utE6+fnnn0WjRo0EANG5c2ejfqVdJ2rp9VWWouVXtK+p60TT0tLku7GeeOIJ+fbionXYtGlT4enpafJ1Xb16VZ63adMmk+M/eNtnaUpbh6VdD3rr1i35Robhw4eXOoa1YIhWo8OHD4tmzZoZ3YanVquLPQpPkiQxcuRIkZ+fb9T/4MGDQqvVyu3+fhujm5ubOHToULFxqyNEhRDi559/lu+KAQpvk9RoNAKAaN68udHdWw968HZFoPCWT09PT6N10qBBg2L3qpfntk9Lra+yVHaICiHEV199ZbQenZ2d5fXv5eVldINASa+r6B59AMLFxUX4+/sLf39/8cUXX8htKiNEBw8eLAAIX19fkZqaWqzv3r175VuAv/7663KsFcvi7nw16tq1K6Kjo/H9999j9OjRaNasGTQaDTIyMuDh4YHHH38c7733HqKiorBx48Ziu3Ldu3dHVFQUXn/9dQQFBcFgMEAIgaCgILzxxhuIiopCt27dLPTqgH79+uG3337DoEGD4O7uDr1eD19fX7z99ts4ffp0iRe9A8DgwYOxYcMGTJgwASEhIdBqtUhPT4eLiwseffRRfPTRR7h06RICAwMrVI+1r6/K9sorr2DXrl3o0aMHnJ2dUVBQgIYNG+If//gHzp8/j4cffrjU/lu3bsU///lPtGjRAvfv30dcXBzi4uIqdRd/2bJl2LFjB1QqlcnrQUNDQzFr1iwAwGuvvYaoqKhKG78qSEJU45FkIqJahluiREQKMESJiBRgiBIRKcAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJ1zLJlyxAQEACNRoNOnTrhf//7n6VLIgs7dOgQnnrqKTRo0ACSJOGnn36ydEk1CkO0Dtm0aRNmzpyJOXPm4MyZMwgJCUG/fv1MPtWd6oasrCyEhIRg2bJlli6lRuJtn3VIp06d0LFjRyxduhQAYDAY4Ovri3/84x94++23LVwdWQNJkrB9+3Y8/fTTli6lxuCWaB2Rn5+P06dPG31wm0qlQmhoKI4dO2bByohqNoZoHXHnzh3o9Xr4+PgYTffx8bG6j40gqkkYokRECjBE6wgvLy/Y2NgU++iIlJQUk8/5JKKyMUTrCLVajfbt2xt9cJvBYMD+/fvRuXNnC1ZGVLPZWroAqj4zZ87EuHHj0KFDBzz66KNYtGgRsrKyyv2xvFQ7ZWZm4tq1a/LPMTExOHfuHDw8PODn52fBymoGXuJUxyxduhQLFy5EcnIy2rRpgyVLlqBTp06WLoss6ODBg+jZs2ex6ePGjcO6deuqv6AahiFKRKQAj4kSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiidVBeXh7mzp2LvLw8S5dCVoTvC/PwOtE6SKfTQavVIj09Ha6urpYuh6wE3xfm4ZYoEZECDFEiIgXqxANIDAYDEhMT4eLiAkmSLF2Oxel0OqN/iQC+L/5OCIGMjAw0aNAAKpXp7c06cUz05s2b8PX1tXQZRFQDxcfHo1GjRibn14ktURcXFwDA+q174ejoZOFqyNr07tzK0iWQFdLpdAjw95Xzw5Q6EaJFu/COjk5wdHK2cDVkbXgmmkpT1iFAnlgiIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUYIgSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiiREQKMESJiBRgiBIRKcAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUYIgSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiiREQKMESJiBRgiBIRKcAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECthaugAq297d/8Wij2eX2kbj4IAffz5R4jyDwYA9O7dh3+6fEH8jBga9HvUb+qFH6AAMfmYM7OzsSux39cplHD8cgUuRp3Ej9joyMzLg4OgI/4CmeLxHX/R/6hmo7e0Vvz6qOjdu3MD27dtwYP9+REaeR0pKCtRqNZo0aYJ+/Qdg+vQZqF+/frF+BoMBv/76K06dOonTp07h1KmTiI2NBQAsW/YVXn7llWp+JdaLIVqD2NrawtlVW+I8jcahxOkFBffx0Xuv4dTx3wqXYWcHG5UN/rgWjT+uRePwwb341xer4ODoaNQvYu8ufDb/HflnlUoFB0cnZGbocOnCWVy6cBa7w7bio8+Ww+shn0p6hVSZ4uPj0bRJAIQQ8jRXV1dkZWUhMjISkZGRWLXya2ze8iN69uxp1Fen06FPaK/qLrlGYojWIEGt2+DjxWsq1GfDqqU4dfw3qNX2mPr6++jZZxBUKhVOHjuEzxe8j9+jL2Lpv+dh1uyPjfoVFBTAXqNBj9An0b33AAS3bgM7tRrZ2VnY//MOrPt6EW7EXse/PpiJf//nW0iSVJkvlSqBXq8HAAwc+CTGjRuPXr17w93dHfn5+di/fz+m/2MqYmJiMHzY07gcdQX16tUz6u/k5IS27dqhffsO6NihI954YyaSk5Mt8VKsGo+J1mKpd+9gx4/fAQAmvPwaQvsPgY2NDSRJwqNdumPGW/MAAL/u342Y678b9Q1uHYLV3+/G9FlzENLuUdip1QAAR0cnPDVsJKa89i4A4MrlC7h4/nQ1vioqL3d3d5w6fRY7wnZi+DPPwN3dHQCgVqsxYMAAhO0Mh0ajgU6nw9dfrzDqq9VqcS9Nh4MHD+Hf//4cz48cCXseuikRQ7QWO3poH+7n58PJ2QX9n3qm2PzOj/dEQ19/CCFwcF+40byGvgFw9/A0ueweoQNh++ex1GtXLldu4VQptFotQkJCTM4PDAxEp8ceAwCcOW38h1CSJKhUjIfy4FqqxSLP/g8A0OqRdiZPALXt0KWw7Zn/VWjZtrZ2cHR0AgAYDHoFVZIlef75h7Jo158qjsdEa5C4mOuYMm4okhNvwsbGBt716qNNh84YPHwU6tVvVKz9jdg/AAD+jZuZXKZfQBMAQHzcHxBClPvYZlzMNejS08pcPlmvgoICHD16BADQqnVrC1dTc9WoLdFly5YhICAAGo0GnTp1wv/+V7Gtp5pOl34P8XF/wF6jQX5+PuJiruO/W77Fq+OG4eDeXcXap969DQDw8HzI5DI9vLwBADk52cjJyS53Ld+sWgoAeMinPkLaP1aRl0FW4j//WYbk5GSoVCqMHTvO0uXUWDVmS3TTpk2YOXMmli9fjk6dOmHRokXo168frly5Am9vb0uXV6U8vR7C6Amvomv3UDRo5A87Ozvcz8/HuTMnsOarz3Ej9jo+XzAbXt4+aB3SQe6Xl5sDAKWeENDYa+Tvc3Oy5V300vwcthXHDh8AALw0bZbJ60zJekVGRuK9dwsvYZs6dRqCg4MtXFHNVWO2RD///HO89NJLmDBhAoKDg7F8+XI4OjpizZril/zk5eVBp9MZfdVk7Tp2wajxr8C/cTM5sOzUanR8rBs+W7YBDRr6Qa8vwNoVi6u8lgvnTmH5ksLLoQYNfR5dnwit8jGpciUlJWH4sKeRk5OD9u3bY8HHn1i6pBqtRoRofn4+Tp8+jdDQv35hVSoVQkNDcezYsWLtFyxYAK1WK3/5+vpWZ7nVysnZBc+NeREAcOVyJNLT7snz7P+8AD8vL89k/9y8XPl7jYOjyXYAcDX6Eua9Ox338/PRuVtvTP7HW0pKJwtITU3FgP59ERMTg+bNm2NH2C5oNJqyO5JJNSJE79y5A71eDx8f4ztjfHx8Srz495133kF6err8FR8fX12lWkTL4IcBAEIIpCQlyNM9/zzeWXRstCSpd24BABwcHEvdlY+5/jtmz3oF2VmZaNexC96a8ylsbGwqo3yqJunp6Rg4oB8uXrwIPz8/7PllX7HfKaq4GnNMtCLs7e15YTAAX/8muBF7HXEx10y2KTqD7+vfxGSb+LgYvP/6ZGTo0tHqkXZ4b/4XPA5aw2RlZWHQoIE4deoU6tWrhz2/7IOfn5+ly6oVasSWqJeXF2xsbJCSkmI0PSUlpditanXRlcsX5O996jeQv3+kbUcAwKXIM8g3sUt/7nTh4ZCQ9p1KnJ+UEI/3Zr6EtHupaBHYGnM/WWbyPn2yTjk5ORgy5CkcO3oUnp6e2PPLPjRv3tzSZdUaNSJE1Wo12rdvj/3798vTDAYD9u/fj86dO1uwsqr34MMjSpKdlYktG1cDAFoEtYbWzUOe1+WJUNip1cjKzMCeXduK9T1x5CBu3oiFJEno3ntAsfm3byXj3Zkv4e6dW2jcrCXmfba8XGfvyXrk5+fjmeHDcDAiAm5ubtj98y9o1aqVpcuqVWpEiALAzJkzsXLlSqxfvx5RUVGYMmUKsrKyMGHCBEuXVqVuJSdi5pTR2LNrG26lJMnT79+/j1MnDuONqWOREB8HlUqF8ZNnGPX18PTC4OGjAQBrl3+BA3vC5DtTTh7/DYs++QAA0L33ADRu2sKob9q9u3hv5ku4lZwIv4Cm+L9/r4CLi2tVvlSqZHq9HmNGj8KePT/DxcUFO3ftRrt27crdPz09HXfu3JG/DAYDACArO8toemknLusCSZS1qWNFli5dioULFyI5ORlt2rTBkiVL0KlTybuhD9LpdNBqtdgSfhSOTs7VUGnlSUlKwMTn/9pKVKvtoXFwQHZWJgoKCgAA9hoNps2cjV79nirW/++PwrNTq6FSqZCXW3hWvkVga/zfFyuLbWFuXLcc3639DwDA0cm51OeGPtGzH16e/rayF2pB/R5/2NIlVIlDhw6hV8/uAACNRgOttuTHKAKAr68vjp84aTStV68eOPTrr2WOs3r1WowbP15RrdZIp9PBw12L9PR0uLqa3oCoUSeWpk2bhmnTplm6jGrl5uGJl6e/jcsXziLm+hWkp91DVmYmNA4OaNzQDyHtO+HJIc/Bu16DEvvb2tphzoIvsWfnj9i3+7+4EfcHDAY9mjQLRPfe/THk2RdKPEkkhEH+PjsrE9lZmSZrzCplHllO0ZYjAOTm5iI3N9dkW17mZL4atSVqrpq8JUpVr7ZuiZIy5d0SrTHHRImIrBFDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUYIgSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiiREQKMESJiBRgiBIRKcAQJSJSoEpD9N69e0hPT6/KIYiILMrsEE1MTMSGDRvw888/F5t36dIldOjQAV5eXvDw8EC3bt3w+++/KyqUiMgamR2ia9aswYQJE3Dw4EGj6Tk5ORg4cCDOnj0LIQSEEDhy5AhCQ0Oh0+mU1ktEZFXMDtF9+/YBAEaMGGE0ff369YiPj4eHhwdWrlyJb7/9Fo0aNUJCQgKWLVumrFoiIitjdojGxsYCAAIDA42mb9u2DZIk4V//+hcmTZqEUaNGYeXKlRBCYMeOHYqKJSKyNmaH6J07d+Dq6goHBwd5msFgwNGjRyFJEp555hl5ep8+faBSqXDlyhVl1RIRWRmzQ1Sv1yMvL89o2oULF5CdnY1WrVrB3d39r0FUKri7uyMrK8v8SomIrJDZIVq/fn3k5eUhJiZGnrZnzx4AQJcuXYq1z8zMhIeHh7nDERFZJbNDtHPnzgCADz/8EAaDAbdv38ZXX30FSZLQr18/o7YxMTHIy8tD/fr1lVVLRGRlzA7RGTNmAAC++eYbuLm5wdfXF3FxcWjcuDEGDRpk1Hbv3r0AgHbt2ikolYjI+pgdoo8++ijWrFkDZ2dnZGZmIj8/H4GBgdi2bRtsbW2N2m7YsAEA0LNnT2XVEhFZGUkIIZQsICcnBxcvXoSbmxuaNm0Klco4l/Pz8/HDDz9ACIEhQ4bAzc1NyXBm0el00Gq12BJ+FI5OztU+Plm3fo8/bOkSyArpdDp4uGuRnp4OV1dXk+1sTc4pJwcHB3Ts2NHkfLVajbFjxyodhojIKvEpTkRECjBEiYgUKNfufJMmTSplMEmScP369UpZFhGRNShXiBbdJ6+UJEmVshwiImtRrhBdu3ZtVddBRFQjlStEx40bV9V1EBHVSDyxRESkAEOUiEgBhigRkQKKQ/T8+fOYPHkygoOD4erqChsbG5Nff7+nnoioplOUakuXLsXMmTOh1+uh8BZ8IqIayewt0RMnTmDGjBnQ6/V49dVXER4eDgDw8PDAvn378O2332L8+PFQq9Xw8vLCxo0bceDAgUornIjIGpi9JbpkyRIIIfDaa6/h888/l6er1Wr06tULADBq1ChMnz4d/fr1w+zZs3HmzBnlFRMRWRGzt0SPHDkCSZLkhzMX+ftufZs2bfDll1/i+vXrWLhwobnDERFZJbNDNCUlBfb29vD39/9rYSoVcnNzi7UdOnQo7OzssG3bNnOHIyKySmbvzjs6Oha7F97FxQU6nQ55eXmwt7eXp9vZ2cHR0RFxcXHmV0pEZIXM3hJt2LAhdDodCgoK5GlNmzYFAJw8edKobWJiItLT03kGn4hqHbNDNCgoCHq9HhcuXJCn9ejRA0IIzJs3T96tz8/Px/Tp0wEADz/Mj2EgotrF7BDt27cvhBAICwuTp02dOhX29vbYv38/GjVqhK5du6Jhw4bYvn07JEnCtGnTKqVoIiJrYfYx0eHDh+PmzZto0KCBPK1x48bYuHEjJkyYgNTUVBw7dgxA4QmnWbNmYfTo0corJiKyIoo/7bMkqampCA8PR3x8PLRaLfr27YtmzZpV9jDlxk/7pNLw0z6pJNX2aZ8l8fDwwJgxY6pi0UREVoVPcSIiUoAhSkSkgNm780X3x1eEJEnYv3+/uUMSEVkds0P04MGD5WpXdFeTEIKf9klEtY7ZITpnzpxS56enp+PEiRM4duwYPD09MWXKFNjY2Jg7HBGRVaqyEC1y4MABDBs2DJcvX8bWrVvNHY6IyCpV+YmlXr16YfHixdi+fTtWrVpV1cMREVWrajk7P2LECNjY2DBEiajWqZZPjtNoNHByckJUVFR1DGdS786tSr3zgOqmUzfuWboEskJZGbpytauWLdGEhAQ+Co+IaqUqD9GcnBy8+uqrAPgoPCKqfczenZ83b16p83NzcxEfH489e/bg7t27kCQJU6dONXc4IiKrZHaIzp07t1wXzwshoFKp8P7772PUqFHmDkdEZJXMDtEnnnii1BC1tbWFu7s7QkJC8Nxzz6F58+bmDkVEZLWq/LZPIqLajE9xIiJSwOwQnTdvHj7//PNyt1+yZEmZJ6OIiGoasz8eRKVSoV69ekhMTCxX+8aNG+PGjRvQ6/XmDKdI0ceDpN4r/TH/VDfxYnsqSVaGDr0fCSjz40G4O09EpEC1hWhqaio0Gk11DUdEVC2qJUS3bNmCjIwM+Pn5VcdwRETVptyXOC1evBiLFy82mnb79m00adLEZB8hBNLS0qDT6SBJEp588knzKyUiskLlDtG0tDTExsYaTdPr9cWmmdK7d2988MEHFamNiMjqlTtEn376aQQEBAAo3MKcOHEitFotFi1aZLKPSqWCq6srWrdujaZNmyqtlYjI6lTbJU6WxEucqDS8xIlKUt5LnMy+7dNgMJjblYio1uB1okRECpgdosePH0e7du3K9YzQF198Ee3atcOpU6fMHY6IyCqZHaIbN27E+fPn0a1btzLbPvbYYzh37hw2btxo7nBERFbJ7BD99ddfAQB9+/Yts+3QoUMBABEREeYOR0RklcwO0Zs3b0Kr1cLDw6PMtp6entBqtUhISDB3OCIiq2R2iObk5FToDL0QAhkZGeYOR0RklcwOUW9vb2RkZJTrOtGEhATodDp4eXmZOxwRkVUyO0Qfe+wxAMCyZcvKbFvUplOnTuYOR0RklcwO0UmTJkEIgU8//RRff/21yXYrVqzAp59+CkmSMGnSJHOHIyKySmbf9gkAzz33HLZu3QpJktC6dWsMGjQI/v7+AIC4uDiEhYXh0qVLEEJg+PDh2LJlS6UVXhG87ZNKw9s+qSRVftsnAKxfvx6SJGHLli24cOECLl68aDS/KJ+ff/55rF69WslQRERWSdFtnw4ODti0aRP27duHUaNGwd/fH/b29tBoNAgICMDo0aNx4MABbNy4EQ4ODpVVMxGR1VC0JVqkV69e6NWrl8n5BoMBu3btwurVq/HTTz9VxpBERFahUkLUlKtXr2L16tXYsGEDUlJSqnIoIiKLqPQQzc7OxubNm7F69WocPXoUwF/HRoOCgip7OCIii6q0ED1+/DhWr16NzZs3IzMzE0BheAYGBuLZZ5/Fs88+i9atW1fWcEREVkFRiN6+fRsbNmzAmjVrEB0dDeCvrU5JknDy5Em0b99eeZVERFaqwiEqhEB4eDjWrFmDnTt3oqCgAEIIODg44Omnn8a4cePQv39/ANx9J6Lar9whev36daxZswbr169HUlIShBCQJAmPP/44xo4di+eeew4uLi5VWSsRkdUpd4g2b94ckiRBCIHGjRtj7NixGDt2LBo3blyV9RERWbUK785Pnz4dn376KdRqdVXUQ0RUo5T7jiV7e3sIIfDll1+iQYMGmDp1Ko4fP16VtRERWb1yh2hSUhKWLFmCRx55BKmpqfjqq6/QtWtXtGzZEv/6179w48aNqqyTiMgqlTtE3dzcMG3aNJw9exanT5/GlClToNVqcfXqVcyePRtNmjRBr169sHbt2qqsl4jIqpj1AJK2bdti2bJlSEpKwjfffIPu3btDCIGDBw/ixRdflNv98ssvKCgoqLRiiYisjaKnONnb28tParp27Rree+89NGzYEADkZ4h6e3tjwoQJCA8PZ6ASUa2j6KHMJRFCYM+ePVi1ahXCwsJw//59SJIEoPCQwN27dytzuHLhQ5mpNHwoM5WkvA9lVrQlWhJJktC/f39s3boVCQkJ+OyzzxAUFAQhBNLS0ip7OCIii6r0EH2Ql5cXZs6ciYsXL+Lo0aP8jCUiqnWq9HmiD3rsscfkTwglIqotqnRLlIiotmOIEhEpwBAlIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUqLY7lqjq3LhxA9u3b8OB/fsRGXkeKSkpUKvVaNKkCfr1H4Dp02egfv36Jvvn5+dj8eJF+OH7jbh27RpsbW0RGBSE8eMm4MWXXpIfIEPWJyryLA7tDUdU5FncjIvBvdQ7yM/Lg5u7JwIfboNBz45C975PFutnMBhw9sQRXD5/FtEXzuJy5Fkk3Sx8sPqb8/+NYaMnlDrujZjrOH/yGKIunENU5Flci76E+/n5aNWmPVZv31slr9VaMURruPj4eDRtEoAHH8bl6uqKrKwsREZGIjIyEqtWfo3NW35Ez549i/XX6XToE9oLp0+fBgA4OjoiJycHJ44fx4njx7FzZxh+3LYdtrZ8q1ijHZu+wfaN6+SfHZ2coZJUuJ2ShNspSfht32707P8UPlqyCrZ2dnK7rMwMTB01xOxxly6Yg0N7w5WUXmtwd76G0+v1AICBA5/Epk1bcPtOKlLvpSMjMxthO8PRuHFj3Lt3D8OHPY3k5ORi/V+e/BJOnz4NDw8P/PTfMKTrMpGRmY01a9ZBo9Fg166dmDt3TnW/LCqn1u064rXZ/4d1YRE4cPEGDly8gV+jE/HfI5EYPfkfAICIn8Ow4atFxfo6ODqhTcfOeH7SFMxbvBKeD/mUe1yVjQoBzVpg4LDnMXPOxxgwdERlvaQap9KfJ2qNavPzRNPT0xEbG4uQkJAS50dHR6ND+7bIzc3FB3Pm4oMP/grEs2fPomOHdgCA7dv/i6cGDzbqu2TJYsz852twcHDA9T9i4e3tXXUvxIJq8/NE5/7zFfz802Y09AvAj7+ekacLISCEgEr113bU04+HIDkhvly783q9HjY2NvLPKxd9jNWLP61Vu/MWe54oVS+tVmsyQAEgMDAQnf58etaZP3fZi3z//UYAQMuWLYsFKAC89NJkaLVa5OTkYPu2bZVYNVWXoEfaAgDupBjvhUiSZBSgFfVggNZ1DNE6wNPDE8Bfu/5Ffj0YAQDo06dvif0cHBzw+OPdAAAREQeqsEKqKhfO/A8AUN/Xz8KV1F4M0VquoKAAR48eAQC0at1ani6EQHR0NAAgOLiVyf5BwcEAgKioy1VYJVWm7KxMXI26hIWzZ2Hfzu0AgGfGvmThqmqvGnHK9dChQ1i4cCFOnz6NpKQkbN++HU8//bSly6oR/vOfZUhOToZKpcLYsePk6TqdDllZWQCA+g0amOzf4M95SUlJVVsoKXIrKQGDuzxcbLq9vQbjps7EMy/wUyWqSo3YEs3KykJISAiWLVtm6VJqlMjISLz37jsAgKlTpyH4z61KAHKAAoW77aY4OjgCADIzM6uoSqoMKhsbeHh5w8PLG3ZqNQDAxtYWY199Dc+MfbGM3qREjdgSHTBgAAYMGFDu9nl5ecjLy5N/1ul0VVGWVUtKSsLwYU8jJycH7du3x4KPP7F0SVSFvLzrIfxk4eEZg8GAm7F/4JsVi7Hyi48RtulbfL52E5q0CLJwlbVTjdgSragFCxZAq9XKX76+vpYuqVqlpqZiQP++iImJQfPmzbEjbBc0Go1RGycnJ/n7nJwck8vKzskGADg7O1dNsVTpVCoV/Jo0w3uffImRk15FcuJNzJ05BQaDwdKl1Uq1MkTfeecdpKeny1/x8fGWLqnapKenY+CAfrh48SL8/Pyw55d98PEpfhG1q6urHKRJiYkml5f457zSbhsl6/Xs+MkAgN8vReL3S5EWrqZ2qpUham9vD1dXV6OvuiArKwuDBg3EqVOnUK9ePez5ZR/8/Eq+tEWSJAQFFe7eXb58yeQyoy4XnpUPCgo22Yasl7fPX3/8bsbFWLCS2qtWhmhdlJOTgyFDnsKxo0fh6emJPb/sQ/PmzUvt071H4b30+/aVfIdJbm4uDh/+DQDQq1fvyi2YqkVifJz8vaMTD8lUBYZoLZCfn49nhg/DwYgIuLm5YffPv6BVK9PXfhZ5/vmRAApvDd25c2ex+atWrUR6ejocHBzw9NChlV43KaPX61HWXdvffv0lgMIz9a3bdayOsuqcGhGimZmZOHfuHM6dOwcAiImJwblz53Djxg3LFmYF9Ho9xowehT17foaLiwt27tqNdu3alatv27Zt8eyzzwEAJk0cj/DwcHmZ32zYgHfefgsAMOO1f9ba++ZrspSkBIwf3Athm7/FraQEebrBYMDvly/gg9cmY8embwAAz457Ca5aN6P+mTod0lLvyl9CFJ54ysnOMpqe/8CVLkXy8/KM2uT+eXJSr9cbTc+sA1fG1IgHkBw8eLDEx7iNGzcO69atK7N/bX4AyaFDh9CrZ3cAgEajgVarNdnW19cXx0+cNJpW0qPw9Hq9fInYk08OqvWPwqupDyBJvHkDw7q1kX+2t9fAwckJ2ZmZyM//K/iefGYk3lmwuNj/4ZTnn8LZE0fKHOf9hUsx6JlRRtN2bt2I+bOmldm3baeu+OqHsDLbWaPyPoCkRvxm9OjRo8zdlrrqwctWcnNzkZuba7Lt3y9zAgrP0v92+CgWLfoCm374HteuXYO9vT3atG3LhzJbuYe862H+l6tx6ughXD5/BndupSA9LRX29ho09A9A67YdMejZUQjp8JilS63VasSWqFK1eUuUlKupW6JUtfgoPCKiasAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUYIgSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiiREQKMESJiBRgiBIRKcAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlKAIUpEpABDlIhIAYYoEZECDFEiIgUYokRECjBEiYgUYIgSESnAECUiUoAhSkSkAEOUiEgBhigRkQIMUSIiBRiiREQKMESJiBRgiBIRKcAQJSJSgCFKRKQAQ5SISAGGKBGRAgxRIiIFGKJERAowRImIFGCIEhEpwBAlIlLA1tIFVAchBABAp9NZuBKyRlkZfF9QcVmZGQD+yg9T6kSIZmQUrowAf18LV0JENU1GRga0Wq3J+ZIoK2ZrAYPBgMTERLi4uECSJEuXY3E6nQ6+vr6Ij4+Hq6urpcshK8H3hTEhBDIyMtCgQQOoVKaPfNaJLVGVSoVGjRpZugyr4+rqyl8WKobvi7+UtgVahCeWiIgUYIgSESnAEK2D7O3tMWfOHNjb21u6FLIifF+Yp06cWCIiqircEiUiUoAhSkSkAEOUiEgBhigRkQIMUaqxevToAUmSMHfu3GLzAgICIEkS1q1bV601rVu3DpIkISAgoFrHJcthiNZhc+fOhSRJxb40Gg0aNWqEwYMHY/PmzWU+gKEuiI2Nxdy5c0sMbKrb6sRtn1Q2Hx8f+fv09HQkJCQgISEBYWFhWLduHbZv316jrh9s2rQpNBpNuW7bK4/Y2Fh8+OGHAFBqkGq1WrRs2RINGzaslHHJ+nFLlAAAycnJ8ldWVhYuXryIPn36AAB2796N999/38IVVsz+/fsRHR2NoUOHVuu4Q4cORXR0NPbv31+t45LlMESpGJVKhVatWmHHjh1o1qwZAGDFihUoKCiwcGVE1ochSiZpNBo8++yzAAqfqRgdHY3Y2Fj52GlsbCyuX7+OyZMno3HjxrC3ty92QsVgMOC7777DwIED4ePjA7VajYceegh9+/bF999/X+rxVr1ejy+//BLt2rWDk5MTPDw80KNHD2zdurXM2stzYunEiROYMGECmjVrBkdHR7i6uiI4OBgTJ07Enj17jJbVs2dP+ee/H0MeP368PK88J5auX7+OKVOmoHnz5nBwcICrqyvatWuHefPmmXxw+MGDB+XxAODatWuYOHEifH19YW9vj0aNGuGll15CQkKCyXGjo6MxefJktGjRAo6OjtBoNPD19cVjjz2Gd999F9HR0Sb7UikE1Vlz5swRAERpb4Nly5bJbY4cOSJiYmLkn7/77jvh7OwsAAhHR0fh5OQk/P395b53794VTzzxhNwegNBqtUY/Dx48WOTl5RUbNzc3V/Tr109up1KphJubm5AkSQAQb731lujevbsAIObMmVOsv7+/vwAg1q5dW2xeQUGBmD59ulEdTk5Owt3dXV6+VquV23fo0EG4u7vLbX18fIy+pk+fLrddu3atAGC0Hh60adMmYW9vLy/LxcXF6GdfX19x+fLlYv0iIiLkNgcOHJDXu4uLi7C1tZXnNWjQQNy8ebNY/19++cVoHDs7O+Hm5ma0Dkpaj1Q2hmgdVp4QnTVrltwmKirKKESdnZ1Fp06dxMmTJ+X2V65cEUIUBlVRyLVp00aEhYWJrKwsIYQQmZmZYv369cLb21sAEK+99lqxcf/5z38KAEKSJDF//nyRnp4uhBAiJSVFTJkyxSiQKxqib775pvwaJk6cKNcshBBpaWnip59+EiNGjDDq82CIlaa0ED19+rSws7MTAETXrl1FZGSkEEIIvV4vduzYIerXry8AiKZNm4qMjAyT47u7u4vBgweLqKgoIYQQeXl5YtOmTcLFxUUAEC+88EKxsZs2bSoAiL59+4oLFy7I03NycsTFixfFhx9+WOK6orIxROuwskI0PT1dNGjQQAAQHh4eQq/XG4Wov79/sV/2Ihs2bBAARGBgoEhLSyuxzalTp4QkSUKtVouUlBR5ekJCgrx1NXv27BL7jhw5stQtKFMheuXKFaFSqQQA8eabb5a47JJURoj2799fABDNmjWT/6A86MyZM/LrXrhwocnxe/bsKfR6fbH+S5YsEQCEg4ODuH//vjw9JSVF7puYmFjOV0zlxWOiVExaWhr279+PXr16ITExEQAwY8aM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\n"},"metadata":{}}]},{"cell_type":"code","source":["#from sklearn.metrics import classification_report\n","\n","# Define the confusion matrix values\n","tp = 502\n","fp = 21\n","fn = 20\n","tn = 311\n","\n","tot=tp+tn+fp+fn\n","acc=(tp+tn)/tot\n","precision=tp/(tp+fp)\n","recall=tp/(tp+fn)\n","f1=2 * (precision * recall) / (precision + recall)\n","\n","print(f'Accuracy: {acc:.4f}')\n","print(f'Precision: {precision:.4f}')\n","print(f'Recall: {recall:.4f}')\n","print(f'F1: {f1:.4f}')\n","#print(report)\n"],"metadata":{"id":"7607ML90EmoL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700485793958,"user_tz":-330,"elapsed":572,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"c6167361-a3c0-42d6-c39a-7631940518e9"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9520\n","Precision: 0.9598\n","Recall: 0.9617\n","F1: 0.9608\n"]}]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1jnJO1V4RaNZJisOD6qICpHydvnkaHzX8","authorship_tag":"ABX9TyOh9XvXSXya55kFsn6qE60J"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}